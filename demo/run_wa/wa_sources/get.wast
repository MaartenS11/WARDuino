(module
 (; Arduino imports ;)

 (import "env" "chip_delay"         (func $delay    (type $2)))
 (import "env" "print_string"       (func $print    (type $2)))
 (import "env" "connect"            (func $connect  (type $1)))
 (import "env" "get"                (func $get      (type $0)))

 (; Memory ;)
 (memory $url 1)
 (data (i32.const  0) "h\00t\00t\00p\00:\00/\00/\00w\00w\00w\00.\00a\00r\00d\00u\00i\00n\00o\00.\00c\00c\00/\00a\00s\00c\00i\00i\00l\00o\00g\00o\00.\00t\00x\00t\00")
 (data (i32.const 71) "s\00s\00i\00d\00\00p\00a\00s\00s\00w\00o\00r\00d\00\00")

 (; Type declarations ;)
 (type $0 (func (param i32) (param i32) (param i32) (param i32) (result i32)))
 (type $1 (func (param i32) (param i32) (param i32) (param i32) (result)))
 (type $2 (func (param i32)                                     (result)))
 (type $3 (func (param)                                         (result)))

 (; Define one function ;)
 (export "main" (func $main))

 (; The wait function ;)
 (func $wait (type $3)
    (;  Delay time   ;)
    (i32.const 1000)
    (call $delay)
 )

 (; Main ;)
 (func $main (type $3)
    (; connect to wifi ;)
    (i32.const 71)  (; start address string ;)
    (i32.const 25) (; string length including terminating null byte ;)
    (i32.const 98)
    (i32.const 24)
    (call $connect)
    (; get and print response ;)
    (i32.const 0)
    (i32.const 70)
    (i32.const 120)
    (i32.const 1000)
    (call $get)
    (call $print)
    (call $wait)
 )
)
