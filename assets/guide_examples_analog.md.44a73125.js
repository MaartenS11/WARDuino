import{_ as s,o as a,c as n,V as l}from"./chunks/framework.cf01d80e.js";const o="/WARDuino/assets/analog-circuit.5a8f4d05.svg",d=JSON.parse('{"title":"Analog Read Serial","description":"","frontmatter":{},"headers":[],"relativePath":"guide/examples/analog.md","filePath":"guide/examples/analog.md","lastUpdated":null}'),p={name:"guide/examples/analog.md"},e=l('<h1 id="analog-read-serial" tabindex="-1">Analog Read Serial <a class="header-anchor" href="#analog-read-serial" aria-label="Permalink to &quot;Analog Read Serial&quot;">​</a></h1><p>This is the smallest example for WARDuino, the program shows how to read analog input from the physical world, and print it out via the serial bus.</p><h2 id="circuit" tabindex="-1">Circuit <a class="header-anchor" href="#circuit" aria-label="Permalink to &quot;Circuit&quot;">​</a></h2><p>We can connect a potentiometer or similar sensor to one of the I/O pins of the embedded device. With WARDuino you can measure the resistance produced by the potentiometer.</p><p>For this example you require:</p><ol><li>A microcontroller</li><li>Potentiometer or other sensor</li></ol><img src="'+o+`" class="circuit"><h2 id="program" tabindex="-1">Program <a class="header-anchor" href="#program" aria-label="Permalink to &quot;Program&quot;">​</a></h2><p>Read a sensor, print its state out to the serial bus.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-9r23B" id="tab-TzF8-Yp" checked="checked"><label for="tab-TzF8-Yp">AS</label><input type="radio" name="group-9r23B" id="tab-TVRoL6U"><label for="tab-TVRoL6U">Rust</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">analogRead</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">delay</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">print</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">as-warduino/assembly</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">analogRead</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">13</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">print</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">delay</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-rust"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> warduino</span><span style="color:#89DDFF;">::{</span><span style="color:#FFCB6B;">analog_read</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> delay</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> print</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">#[</span><span style="color:#A6ACCD;">no_mangle</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#F78C6C;">pub</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">u32</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">analog_read</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">13</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">delay</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></div></div>`,10),t=[e];function r(c,i,F,y,D,C){return a(),n("div",null,t)}const u=s(p,[["render",r]]);export{d as __pageData,u as default};
