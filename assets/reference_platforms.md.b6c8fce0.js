import{_ as t,o as e,c as r,V as l}from"./chunks/framework.cf01d80e.js";const g=JSON.parse('{"title":"Platform Support","description":"","frontmatter":{"next":"Latch Reference"},"headers":[],"relativePath":"reference/platforms.md","filePath":"reference/platforms.md","lastUpdated":null}'),a={name:"reference/platforms.md"},n=l('<h1 id="platform-support" tabindex="-1">Platform Support <a class="header-anchor" href="#platform-support" aria-label="Permalink to &quot;Platform Support&quot;">​</a></h1><p>The WARDuino VM currently supports the Arduino toolchain, and has limited support for the ESP-IDF toolchain. Normally, devices that support these toolchains should be able to run WARDuino.</p><p>The callback handling system in WARDuino currently requires significant memory because it allocates memory, following the WebAssembly specification, in pages of 64 KiB. This is a major constraint for some microcontrollers, however all other parts of the VM can still work without allocating any WebAssembly memory pages.</p><h2 id="compatibility" tabindex="-1">Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;Compatibility&quot;">​</a></h2><p>The following table lists the devices on which the WARDuino VM has been verified to work.</p><table><thead><tr><th style="text-align:left;">Device Family / OS</th><th style="text-align:center;">CLI</th><th style="text-align:center;">Arduino</th><th style="text-align:center;">ESP IDF</th><th style="text-align:center;">Callbacks</th></tr></thead><tbody><tr><td style="text-align:left;">Windows</td><td style="text-align:center;">➖</td><td style="text-align:center;">➖</td><td style="text-align:center;">➖</td><td style="text-align:center;">➖</td></tr><tr><td style="text-align:left;">Linux</td><td style="text-align:center;">✅</td><td style="text-align:center;">➖</td><td style="text-align:center;">➖</td><td style="text-align:center;">✅</td></tr><tr><td style="text-align:left;">macOS</td><td style="text-align:center;">✅</td><td style="text-align:center;">➖</td><td style="text-align:center;">➖</td><td style="text-align:center;">✅</td></tr><tr><td style="text-align:left;"><a href="https://www.espressif.com/en/products/socs/esp8266" target="_blank" rel="noreferrer">ESP8266</a></td><td style="text-align:center;">➖</td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td><td style="text-align:center;">➖</td></tr><tr><td style="text-align:left;"><a href="https://www.espressif.com/sites/default/files/documentation/esp32-wroom-32e_esp32-wroom-32ue_datasheet_en.pdf" target="_blank" rel="noreferrer">ESP32 WROOM</a></td><td style="text-align:center;">➖</td><td style="text-align:center;">✅</td><td style="text-align:center;">❗<a href="https://github.com/TOPLLab/WARDuino/issues/210" target="_blank" rel="noreferrer">*</a></td><td style="text-align:center;">❗</td></tr><tr><td style="text-align:left;"><a href="https://www.espressif.com/sites/default/files/documentation/esp32-wrover-e_esp32-wrover-ie_datasheet_en.pdf" target="_blank" rel="noreferrer">ESP32 WROVER</a></td><td style="text-align:center;">➖</td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td><td style="text-align:center;">✅</td></tr></tbody></table><p>✅ = supported | ❗ = unstable | ➖ = not supported</p>',7),s=[n];function i(o,d,c,p,h,f){return e(),r("div",null,s)}const m=t(a,[["render",i]]);export{g as __pageData,m as default};
